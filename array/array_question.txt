1️⃣ Basic Level


Find maximum and minimum in an array
Concepts: iteration, comparison.

Sum and average of array elements
Concepts: iteration, arithmetic.

Reverse an array
Concepts: two-pointer swap, in-place modification.

Check if array is sorted (ascending/descending)
Concepts: iteration, condition checking.

Count even and odd elements
Concepts: modulo operation, counting.



2️⃣ Intermediate Level

Remove duplicates from an array
Input: [1,2,2,3,1] → Output: [1,2,3]
Concepts: nested loops or hash/frequency array, in-place modification.

Find second largest / smallest element
Concepts: comparison, edge cases.

Left / Right rotate array by k positions
Concepts: pointer arithmetic, reverse method, temporary buffer.

Move all zeros to the end
Input: [0,1,0,3,12] → Output: [1,3,12,0,0]
Concepts: in-place modification, two-pointer technique.

Find common elements in two sorted arrays
Concepts: two-pointer technique, intersection logic.


3️⃣ Advanced Level

Maximum subarray sum (Kadane’s Algorithm)
Concepts: dynamic programming, cumulative sum.

Find subarray with given sum
Concepts: sliding window, prefix sum.

Trapping rain water problem
Concepts: array manipulation, prefix/suffix arrays.

Merge two sorted arrays without extra space
Concepts: in-place sorting, swapping, two-pointer.

Find majority element (appears > n/2 times)
Concepts: frequency array, Boyer-Moore voting algorithm.



4️⃣ Expert / Interview Level

Next permutation
Input: [1,2,3] → Output: [1,3,2]
Concepts: permutation logic, array reversal.

Longest consecutive sequence
Input: [100,4,200,1,3,2] → Output: 4 (sequence 1,2,3,4)
Concepts: hashset, checking continuity.

Product of array except self
Input: [1,2,3,4] → Output: [24,12,8,6]
Concepts: prefix/suffix product arrays, no division.

Maximum sum of i*arr[i] (rotation problem)
Concepts: mathematical formula, optimization.

Find two elements whose sum is closest to zero
Concepts: sorting, two-pointer technique.
